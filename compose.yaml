# compose.yaml
#
# ─────────────────────────────────────────────────────────────────────────────
# HOW TO USE (no shell exports; just edit this file)
# ─────────────────────────────────────────────────────────────────────────────
# MODES
# 1) LOCAL (all-in-one on laptop):
#    - Ensure CH_HOST below for dlt/dbt is set to "clickhouse" (default).
#    - Start core:    docker compose --compatibility up -d --profile core
#    - Run dlt job:   docker compose --profile jobs run --rm dlt python pipelines/dlt-mpg-pipeline.py
#    - Run dbt:       docker compose --profile jobs run --rm dbt run && docker compose --profile jobs run --rm dbt test
#    - Metabase:      http://localhost:3001
#
# 2) REMOTE (students target a server you run):
#    - On THE SERVER, expose ports and start only core:
#         docker compose --compatibility up -d --profile core
#      (Make sure inbound 8123 (ClickHouse HTTP) and 3001 (Metabase) are allowed.)
#    - On STUDENT laptops, DO NOT start core. Edit the dlt/dbt env below:
#         CH_HOST: "<SERVER_PUBLIC_IP_OR_DNS>"
#         CH_HTTP_PORT: "8123"
#         CH_TCP_PORT:  "9000"
#         CH_USER / CH_PASS: (what the teacher set on the server)
#         DBT_SCHEMA: "ftw_<student_alias>"   # to avoid clobbering each other
#      Then run the same dlt/dbt commands shown above (jobs profile only).
#
# NOTES
# - Windows 10/11: run in WSL2 Ubuntu; clone repo inside WSL home for best performance.
# - Apple Silicon: if you hit arch issues, uncomment the "platform: linux/amd64" lines.
# - Resource limits require --compatibility flag with Docker Compose v2 (kept for teaching).
#
# ─────────────────────────────────────────────────────────────────────────────

services:
  # ──────────────────────────────────────────────────────────
  # PERSISTENT SERVICES (start these in LOCAL mode or on SERVER)
  # ──────────────────────────────────────────────────────────

  clickhouse:
    image: clickhouse/clickhouse-server:23.12
    # platform: linux/amd64    # ← uncomment on Apple Silicon ONLY if you hit arch errors
    container_name: clickhouse
    ports:
      # LOCAL: exposes to your laptop
      # SERVER: keep as-is; students will reach the server's public IP on 8123/9000
      - "8123:8123"   # HTTP (used by Metabase / curl)
      - "9000:9000"   # Native TCP (used by drivers / dlt)
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/users.d/ftw-de-bootcamp.xml:/etc/clickhouse-server/users.d/ftw_user.xml:ro
      - ./clickhouse/initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query='SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["core"]

  metabase:
    image: metabase/metabase:latest
    # platform: linux/amd64    # ← uncomment on Apple Silicon ONLY if you hit arch errors
    container_name: metabase
    ports:
      - "3001:3000"   # LOCAL: http://localhost:3001  •  SERVER: http://<server>:3001
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase_data:/metabase-data
    depends_on:
      clickhouse:
        condition: service_healthy
    profiles: ["core"]

  # External sample database (Chinook) used as a SOURCE.
  # Intentionally NO host port to avoid conflicts; other containers reach it by name.

 
  chinook_fetch:
    image: alpine:3.20
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -eux
        apk add --no-cache curl
        mkdir -p /initdb
        curl -fsSL https://raw.githubusercontent.com/lerocha/chinook-database/master/ChinookDatabase/DataSources/Chinook_PostgreSql.sql \
          -o /initdb/01-load-chinook.sql
        ls -lh /initdb
    volumes:
      - chinook_init:/initdb
    restart: "no"
    profiles: ["core"]

  postgres_chinook:
    image: postgres:14-alpine
    container_name: chinook_postgres
    environment:
      POSTGRES_DB: postgres        # 👈 connect here so DROP/CREATE chinook works
      POSTGRES_USER: chinook
      POSTGRES_PASSWORD: chinook
    volumes:
      - chinook_init:/docker-entrypoint-initdb.d:ro
      - pgdata:/var/lib/postgresql/data
    ports:
    # Public on host:5432 → container:5432
    # If 5432 is busy on the host, use "65432:5432" instead.
    - "5432:5432"
    depends_on:
      chinook_fetch:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chinook -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    profiles: ["core"]
 
  
  # ──────────────────────────────────────────────────────────
  # JOB-STYLE SERVICES (ephemeral; run with --profile jobs)
  # ──────────────────────────────────────────────────────────

  dlt:
    build: ./dlt
    container_name: dlt
    working_dir: /var/dlt
    volumes:
      - ./dlt:/var/dlt
      - ./data:/data
    environment:
      # ── CLICKHOUSE DESTINATION (EDIT HERE for LOCAL vs REMOTE) ─────────────
      # LOCAL (default): use the service name "clickhouse"
      # REMOTE: set CH_HOST to your SERVER public IP or DNS (e.g., "34.12.34.56")
      DESTINATION__CLICKHOUSE__CREDENTIALS__HOST:       "clickhouse"   # ← change to "54.87.106.52" for REMOTE
      DESTINATION__CLICKHOUSE__CREDENTIALS__PORT:       "9000"
      DESTINATION__CLICKHOUSE__CREDENTIALS__HTTP_PORT:  "8123"
      DESTINATION__CLICKHOUSE__CREDENTIALS__USERNAME:   "ftw_user"     # ← teacher sets this on server
      DESTINATION__CLICKHOUSE__CREDENTIALS__PASSWORD:   "ftw_pass"     # ← teacher sets this on server
      DESTINATION__CLICKHOUSE__CREDENTIALS__DATABASE:   "raw"
      DESTINATION__CLICKHOUSE__CREDENTIALS__SECURE:     "0"
      DESTINATION__CLICKHOUSE__CREDENTIALS__CONNECT_TIMEOUT: "60"
      DESTINATION__CLICKHOUSE__CREDENTIALS__SEND_RECEIVE_TIMEOUT: "300"
      # ───────────────────────────────────────────────────────────────────────

      # Chinook Postgres SOURCE (internal-only; do not expose on host)
      POSTGRES_HOST:     "chinook_postgres"
      POSTGRES_PORT:     "5432"
      POSTGRES_USER:     "chinook"
      POSTGRES_PASSWORD: "chinook"
      POSTGRES_DB:       "chinook" # this was created by load-chinook.sh
    restart: "no"
    profiles: ["jobs"]

  dbt:
    build: ./dbt
    container_name: dbt
    working_dir: /workdir
    volumes:
      - ./dbt:/workdir
#      - ./dbt/profiles.yml:/root/.dbt/profiles.yml:ro
    environment:
      # ── DBT TARGET & CLICKHOUSE CREDS (EDIT HERE for LOCAL vs REMOTE) ─────
      # DBT_TARGET choices are defined in ./dbt/profiles.yml (e.g., local / remote).
      # LOCAL default (service name):
      # DBT_TARGET: "local"                     # ← set to "remote" when pointing to server
      CH_HOST: "54.87.106.52" # "clickhouse"                   # ← change to "54.87.106.52" for REMOTE
      CH_HTTP_PORT: "8123"
      CH_TCP_PORT:  "9000"
      CH_USER: "ftw_user"                     # ← teacher sets this on server
      CH_PASS: "ftw_pass"                     # ← teacher sets this on server
      #DBT_SCHEMA: "default"                   # ← for REMOTE, use e.g. "ftw_<student_alias>"
      # ───────────────────────────────────────────────────────────────────────
    command: dbt run
    restart: "no"
    profiles: ["jobs"]

volumes:
  clickhouse_data:
  metabase_data:
  chinook_init:
  pgdata:
